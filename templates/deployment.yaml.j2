apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ app_name }}
spec:
  replicas: {{ replicas_count }}
  strategy:
    rollingUpdate:
      maxUnavailable: {{ max_unavailable_vstore }}
  template:
    metadata:
      labels:
        app: {{ app_name }}
    spec:
      nodeSelector:
        role: worker
      volumes:
      - name: vstore-temp
        emptyDir: {}
      containers:
      - name: vstore
        image: {{ vstore_image_path }}:{{ image_version }}
        ports:
        - containerPort: {{ vstore_port }}
        resources:
          limits:
            cpu: {{ backend_app_limits_cpu }}
            memory: {{ backend_app_limits_memory }}
          requests:
            cpu: {{ backend_app_requests_cpu }}
            memory: {{ backend_app_requests_memory }}
        volumeMounts:
        - mountPath: {{ vstore_temp_dir }}
          name: vstore-temp
        readinessProbe:
          httpGet: { path: '{{ vstore_probe_path }}', port: {{ vstore_port }}, scheme: 'HTTP' }
          initialDelaySeconds: 10
          periodSeconds: 10
        lifecycle: 
          preStop: {# preStop hook нужен для того, чтобы аккуратно переключить трафик перед выключением контейнера #}
            exec:
              command: ["/bin/sh", "-c", "sleep 5"]
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: {{ vstore_env }}
        - name: ASPNETCORE_TEMP
          value: {{ vstore_temp_dir }}
        - name: AWS_ACCESS_KEY_ID
          value: {{ ceph_key_id }}
        - name: AWS_SECRET_ACCESS_KEY
          value: {{ ceph_access_key }}
        - name: VSTORE_AWS__ServiceURL
          value: {{ ceph_rgw_url }}
        - name: VSTORE_Ceph__TemplatesBucketName
          value: {{ templates_bucket_name }}
        - name: VSTORE_Ceph__ObjectsBucketName
          value: {{ objects_bucket_name }}
        - name: VSTORE_Ceph__FilesBucketName
          value: {{ files_bucket_name }}
        - name: VSTORE_VStore__FileStorageEndpoint
          value: {{ ceph_rgw_url }}/{{ files_bucket_name }}/
        - name: VSTORE_VStore__SessionExpiration
          value: {{ session_expiration }}
        - name: VSTORE_Jwt__SecretKey
          value: {{ jwt_sign_key }}
        - name: VSTORE_Kafka__BrokerEndpoints
          value: {{ kafka_endpoints }}
        - name: VSTORE_Kafka__ObjectEventsTopic
          value: {{ object_events_topic }}
        - name: VSTORE_Kafka__SessionEventsTopic
          value: {{ session_events_topic }}
      - name: vstore-event-producer
        image: {{ vstore_worker_image_path }}:{{ image_version }}
        command: ["/app/VStore.Worker", "produce", "events"]
        args: ["mode=binaries,versions"]
        resources:
          limits:
            cpu: {{ worker_app_limits_cpu }}
            memory: {{ worker_app_limits_memory }}
          requests:
            cpu: {{ worker_app_requests_cpu }}
            memory: {{ worker_app_requests_memory }}
        env:
        - name: VSTORE_ENVIRONMENT
          value: {{ vstore_env }}
        - name: AWS_ACCESS_KEY_ID
          value: {{ ceph_key_id }}
        - name: AWS_SECRET_ACCESS_KEY
          value: {{ ceph_access_key }}
        - name: VSTORE_AWS__ServiceURL
          value: {{ ceph_rgw_url }}
        - name: VSTORE_Ceph__ObjectsBucketName
          value: {{ objects_bucket_name }}
        - name: VSTORE_Ceph__FilesBucketName
          value: {{ files_bucket_name }}
        - name: VSTORE_VStore__FileStorageEndpoint
          value: {{ ceph_rgw_url }}/{{ files_bucket_name }}/
        - name: VSTORE_Kafka__BrokerEndpoints
          value: {{ kafka_endpoints }}
        - name: VSTORE_Kafka__ObjectEventsTopic
          value: {{ object_events_topic }}
        - name: VSTORE_Kafka__ObjectVersionsTopic
          value: {{ object_versions_topic }}
        - name: VSTORE_Kafka__SessionEventsTopic
          value: {{ session_events_topic }}
        - name: VSTORE_Kafka__BinariesReferencesTopic
          value: {{ binaries_references_topic }}
    - name: vstore-binaries-collector
      image: {{ vstore_worker_image_path }}:{{ image_version }}
      command: ["/app/VStore.Worker", "collect", "binaries"]
      args: ["batchsize=$(COLLECT_BATCH_SIZE)", "delay=$(COLLECT_TIME_DELAY)"]
      resources:
        limits:
          cpu: {{ worker_app_limits_cpu }}
          memory: {{ worker_app_limits_memory }}
        requests:
          cpu: {{ worker_app_requests_cpu }}
          memory: {{ worker_app_requests_memory }}
      env:
      - name: VSTORE_ENVIRONMENT
        value: {{ vstore_env }}
      - name: AWS_ACCESS_KEY_ID
        value: {{ ceph_key_id }}
      - name: AWS_SECRET_ACCESS_KEY
        value: {{ ceph_access_key }}
      - name: VSTORE_AWS__ServiceURL
        value: {{ ceph_rgw_url }}
      - name: VSTORE_Ceph__FilesBucketName
        value: {{ files_bucket_name }}
      - name: COLLECT_BATCH_SIZE
        value: {{ binaries_collector_batchsize }}
      - name: COLLECT_TIME_DELAY
        value: {{ binaries_collector_timedelay }}
      - name: VSTORE_Kafka__BrokerEndpoints
        value: {{ kafka_endpoints }}
      - name: VSTORE_Kafka__ObjectEventsTopic
        value: {{ object_events_topic }}
      - name: VSTORE_Kafka__ObjectVersionsTopic
        value: {{ object_versions_topic }}
      - name: VSTORE_Kafka__SessionEventsTopic
        value: {{ session_events_topic }}
      - name: VSTORE_Kafka__BinariesReferencesTopic
        value: {{ binaries_references_topic }}
